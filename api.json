{
    "openapi": "3.1.0",
    "info": {
        "title": "GTG API Documentation",
        "version": "1.0.0",
        "description": "GTG API - A comprehensive banking and financial services API providing authentication, account management, transactions, and more.\n\n        **Security Overview:**\n        - All API traffic is encrypted via HTTPS (SSL/TLS).\n        - Authentication requires both an API Key (`X-API-KEY` header) and a Bearer token (Laravel Sanctum).\n        - Passwords are always hashed and never stored in plain text.\n        - No custom end-to-end encryption is required; HTTPS provides industry-standard protection for all data in transit.\n\n        **Security Schemes Configuration:**\n        ```php\n        'securitySchemes' => [\n            'ApiKeyAuth' => [\n                'type' => 'apiKey',\n                'in' => 'header',\n                'name' => 'X-API-KEY',\n            ],\n            'SanctumAuth' => [\n                'type' => 'http',\n                'scheme' => 'bearer',\n            ],\n        ],\n        ```\n        "
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local"
        },
        {
            "url": "https://dev-api.glorytogloryfortune.com/api",
            "description": "Development"
        },
        {
            "url": "https://api.glorytogloryfortune.com/api",
            "description": "Production"
        }
    ],
    "paths": {
        "/v1/fetch-account-name": {
            "post": {
                "operationId": "account.getAccountName",
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "An error occurred while fetching account name"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Account name retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "full_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "full_name"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/fetch-accounts": {
            "post": {
                "operationId": "account.getAllAccounts",
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "An error occurred while fetching accounts"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Accounts retrieved successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "accounts": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "accounts"
                                                    ]
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "response_time": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "enum": [
                                                                0
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "timestamp",
                                                "response_time"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No accounts found for this user"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "accounts": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 0,
                                                            "maxItems": 0,
                                                            "additionalItems": false
                                                        }
                                                    },
                                                    "required": [
                                                        "accounts"
                                                    ]
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "response_time": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "enum": [
                                                                0
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "timestamp",
                                                "response_time"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/account/balance": {
            "post": {
                "operationId": "account.getAccountBalance",
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "AccountNo": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "AccountNo"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "An error occurred while fetching account balance"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Request successfully completed"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "string"
                                                },
                                                "key_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "data",
                                                "key_id"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/account/statement/{account_no}": {
            "get": {
                "operationId": "account.getStatement",
                "tags": [
                    "Account"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactions": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "transactions"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/account/transactions/{account_no}": {
            "get": {
                "operationId": "account.getTransactions",
                "tags": [
                    "Account"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "transactions": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "transactions"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/account/transfer": {
            "post": {
                "operationId": "account.transfer",
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sender_account_no": {
                                        "type": "string"
                                    },
                                    "receiver_account_no": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "pin": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "sender_account_no",
                                    "receiver_account_no",
                                    "amount",
                                    "description",
                                    "pin"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Transfer failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Transfer successful"
                                            ]
                                        },
                                        "reference": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "reference"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid PIN"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Insufficient balance"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "errors"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/account/withdrawal": {
            "post": {
                "operationId": "account.withdrawal",
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "account_no": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "pin": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "account_no",
                                    "amount",
                                    "description",
                                    "pin"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Withdrawal failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Withdrawal successful"
                                            ]
                                        },
                                        "reference": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "reference"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Invalid PIN"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Insufficient balance"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "errors"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/account/name": {
            "get": {
                "operationId": "account.getAccountNameByAccountNo",
                "tags": [
                    "Account"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Account name fetched successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "account_no": {
                                                    "type": "string"
                                                },
                                                "account_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "account_no",
                                                "account_name"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Account not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "account_no": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "account_no"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/account/type": {
            "post": {
                "operationId": "account.getType",
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FetchAccountTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/account/status": {
            "post": {
                "operationId": "account.getStatus",
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FetchAccountStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/account/number": {
            "post": {
                "operationId": "account.getNumber",
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FetchAccountNumberRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/account/officer": {
            "get": {
                "operationId": "accountOfficer.getName",
                "description": "Retrieve the name of the account officer assigned to a specific account.",
                "summary": "Get account officer name",
                "tags": [
                    "AccountOfficer"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/account/officer/phone": {
            "get": {
                "operationId": "accountOfficer.getPhone",
                "description": "Retrieve the phone number of the account officer assigned to a specific account.",
                "summary": "Get account officer phone number",
                "tags": [
                    "AccountOfficer"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/account/officer/email": {
            "get": {
                "operationId": "accountOfficer.getEmail",
                "description": "Retrieve the email address of the account officer assigned to a specific account.",
                "summary": "Get account officer email",
                "tags": [
                    "AccountOfficer"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/account-officers": {
            "get": {
                "operationId": "accountOfficer.index",
                "description": "Retrieve a list of all account officers in the system.",
                "summary": "Get all account officers",
                "tags": [
                    "AccountOfficer"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/account-officers/all": {
            "get": {
                "operationId": "accountOfficer.all",
                "description": "Retrieve a comprehensive list of all account officers with full details.",
                "summary": "Get all account officers with details",
                "tags": [
                    "AccountOfficer"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "operationId": "auth.login",
                "description": "Authenticate a user with their userID and password, returning an access token.",
                "summary": "Login user and create token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/register": {
            "post": {
                "operationId": "auth.register",
                "description": "Create a new user account with the provided personal and account details.",
                "summary": "Register a new user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "lastname": {
                                        "type": "string"
                                    },
                                    "othernames": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "Nationality": {
                                        "type": "string"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "occupation": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "residential_address": {
                                        "type": "string"
                                    },
                                    "residential_state": {
                                        "type": "string"
                                    },
                                    "residential_Local_govt": {
                                        "type": "string"
                                    },
                                    "state_of_origin": {
                                        "type": "string"
                                    },
                                    "local_govt_of_origin": {
                                        "type": "string"
                                    },
                                    "town_of_origin": {
                                        "type": "string"
                                    },
                                    "bvn_no": {
                                        "type": "string"
                                    },
                                    "marital_status": {
                                        "type": "string"
                                    },
                                    "account_type": {
                                        "type": "string"
                                    },
                                    "means_of_identification": {
                                        "type": "string"
                                    },
                                    "identification_no": {
                                        "type": "string"
                                    },
                                    "next_of_kin_name": {
                                        "type": "string"
                                    },
                                    "next_of_kin_othernames": {
                                        "type": "string"
                                    },
                                    "next_of_kin_address": {
                                        "type": "string"
                                    },
                                    "relationship": {
                                        "type": "string"
                                    },
                                    "staffID_get": {
                                        "type": "string"
                                    },
                                    "sms_notification": {
                                        "type": "string"
                                    },
                                    "email_notification": {
                                        "type": "string"
                                    },
                                    "office_address": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "lastname",
                                    "othernames",
                                    "gender",
                                    "Nationality",
                                    "birthday",
                                    "occupation",
                                    "phone",
                                    "email",
                                    "residential_address",
                                    "residential_state",
                                    "residential_Local_govt",
                                    "state_of_origin",
                                    "local_govt_of_origin",
                                    "town_of_origin",
                                    "bvn_no",
                                    "marital_status",
                                    "account_type",
                                    "means_of_identification",
                                    "identification_no",
                                    "next_of_kin_name",
                                    "next_of_kin_othernames",
                                    "next_of_kin_address",
                                    "relationship",
                                    "staffID_get",
                                    "sms_notification",
                                    "email_notification",
                                    "office_address"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/forgot-password": {
            "post": {
                "operationId": "auth.forgotPassword",
                "description": "Send a one-time password to the user's registered phone/email for password reset.",
                "summary": "Send password reset OTP",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/verify-otp": {
            "post": {
                "operationId": "auth.verifyOtp",
                "description": "Verify the one-time password sent to the user for password reset.",
                "summary": "Verify OTP for password reset",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "minLength": 6,
                                        "maxLength": 6
                                    }
                                },
                                "required": [
                                    "userID",
                                    "otp"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/reset-password": {
            "post": {
                "operationId": "auth.resetPassword",
                "description": "Reset the user's password using the verified OTP.",
                "summary": "Reset password with OTP",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "minLength": 6,
                                        "maxLength": 6
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 6
                                    }
                                },
                                "required": [
                                    "userID",
                                    "otp",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/logout": {
            "post": {
                "operationId": "auth.logout",
                "description": "Revoke the current user's access token.",
                "summary": "Logout user",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/bill-payment/mobile": {
            "post": {
                "operationId": "billPayment.processBillPayment",
                "summary": "Process mobile bill payment\r\n\r\nProcess a mobile bill payment for airtime, data, or other mobile services",
                "tags": [
                    "BillPayment"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillPaymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/biometric/fetch": {
            "get": {
                "operationId": "biometric.fetchBiometric",
                "description": "Retrieve biometric data for a specific user.",
                "summary": "Fetch user biometric data",
                "tags": [
                    "Biometric"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/categories": {
            "get": {
                "operationId": "category.index",
                "description": "Retrieve a list of all available item categories in the system.",
                "summary": "Get all item categories",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/categories/search": {
            "post": {
                "operationId": "categorySearch.search",
                "description": "Search for categories by name.",
                "summary": "Search category by name",
                "tags": [
                    "CategorySearch"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategorySearchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/customer/register": {
            "post": {
                "operationId": "customer.register",
                "summary": "Register a new customer\r\n\r\nRegister a new customer with complete personal and account information",
                "tags": [
                    "Customer"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerRegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/customers/name": {
            "get": {
                "operationId": "customer.getName",
                "summary": "Get customer name by account number\r\n\r\nRetrieve customer name information using their account number",
                "tags": [
                    "Customer"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/fetch-desco": {
            "get": {
                "operationId": "desco.getAllDesco",
                "summary": "Get all DESCO providers\r\n\r\nRetrieve a list of all active DESCO (Distribution Company) providers",
                "tags": [
                    "Desco"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/device/setup": {
            "post": {
                "operationId": "device.setup",
                "description": "Register a device for a specific user.",
                "summary": "Setup device for user",
                "tags": [
                    "Device"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceSetupRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/email/verify": {
            "post": {
                "operationId": "emailVerification.sendOtp",
                "description": "Send a one-time password to the user's email for verification.",
                "summary": "Send email verification OTP",
                "tags": [
                    "EmailVerification"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailOtpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/email/verify-otp": {
            "post": {
                "operationId": "emailVerification.verifyOtp",
                "description": "Verify the OTP code sent to the user's email.",
                "summary": "Verify email OTP",
                "tags": [
                    "EmailVerification"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailOtpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/feedbacks": {
            "post": {
                "operationId": "feedback.store",
                "summary": "Submit feedback for account officer\r\n\r\nSubmit feedback and rating for an account officer",
                "tags": [
                    "Feedback"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountOfficerFeedbackRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/feedbacks/images": {
            "post": {
                "operationId": "feedbackImage.store",
                "summary": "Upload feedback images\r\n\r\nUpload images related to feedback submission",
                "tags": [
                    "FeedbackImage"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedbackImagesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/fingerprint/validate": {
            "post": {
                "operationId": "fingerprint.validateFingerprint",
                "description": "Validate user's fingerprint and enable fingerprint authentication.",
                "summary": "Validate and enable fingerprint",
                "tags": [
                    "Fingerprint"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FingerprintValidationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/insurance/view": {
            "post": {
                "operationId": "insurance.viewInsurance",
                "description": "Retrieve all insurance records for a specific user.",
                "summary": "View user insurance details",
                "tags": [
                    "Insurance"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/insurance/active": {
            "post": {
                "operationId": "insurance.viewActiveInsurance",
                "description": "Retrieve only active insurance records for a specific user.",
                "summary": "View active insurance details",
                "tags": [
                    "Insurance"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/items/category": {
            "post": {
                "operationId": "item.getCategoryItems",
                "description": "Retrieve all items for a specific subcategory.",
                "summary": "Get items by subcategory",
                "tags": [
                    "Item"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/items/details": {
            "get": {
                "operationId": "item.getItemDetails",
                "description": "Retrieve detailed information about a specific item.",
                "summary": "Get item details by item code",
                "tags": [
                    "Item"
                ],
                "parameters": [
                    {
                        "name": "item_code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/lgas": {
            "post": {
                "operationId": "lga.index",
                "summary": "Get LGAs by state\r\n\r\nRetrieve all Local Government Areas (LGAs) for a specific state",
                "tags": [
                    "Lga"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FetchLgaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/loans/history": {
            "post": {
                "operationId": "loan.getLoanHistory",
                "summary": "Get user's loan history\r\n\r\nRetrieve all loan records for a specific user",
                "tags": [
                    "Loan"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/loans/active": {
            "post": {
                "operationId": "loan.getActiveLoans",
                "summary": "Get user's active loans\r\n\r\nRetrieve only active loan records for a specific user",
                "tags": [
                    "Loan"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/meter-types": {
            "get": {
                "operationId": "meterType.getAllMeterTypes",
                "summary": "Get all meter types\r\n\r\nRetrieve a list of all available meter types in the system",
                "tags": [
                    "MeterType"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/user/orders": {
            "post": {
                "operationId": "order.getUserOrders",
                "description": "Retrieve all orders for a specific user.",
                "summary": "Get user's order records",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/user/orders/active": {
            "post": {
                "operationId": "order.getActiveOrders",
                "description": "Retrieve all active orders for a specific user.",
                "summary": "Get user's active orders",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/orders": {
            "post": {
                "operationId": "order.store",
                "description": "Create a new order request for a product.",
                "summary": "Create new order request",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/otp/generate": {
            "post": {
                "operationId": "otp.generate",
                "description": "Generate a one-time password and send it to the user's phone.",
                "summary": "Generate and send OTP",
                "tags": [
                    "Otp"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateOtpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/otp/verify": {
            "post": {
                "operationId": "otp.verify",
                "description": "Verify the one-time password entered by the user.",
                "summary": "Verify OTP code",
                "tags": [
                    "Otp"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyOtpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/otp/verify-check": {
            "post": {
                "operationId": "otpVerification.verifyOtp",
                "summary": "Verify OTP code\r\n\r\nVerify a one-time password code for user authentication",
                "tags": [
                    "OtpVerification"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyOtpCheckRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/passport/upload": {
            "post": {
                "operationId": "passport.upload",
                "summary": "Upload user passport image",
                "tags": [
                    "Passport"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadPassportRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/password/forgot": {
            "post": {
                "operationId": "password.forgotPassword",
                "description": "Initiate password recovery process for a user.",
                "summary": "Recover forgotten password",
                "tags": [
                    "Password"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/password/forget-otp": {
            "post": {
                "operationId": "passwordReset.sendOtp",
                "description": "Send a one-time password for password reset.",
                "summary": "Send password reset OTP",
                "tags": [
                    "PasswordReset"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgetPasswordOtpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/password/verify-otp": {
            "post": {
                "operationId": "passwordReset.verifyOtp",
                "description": "Verify the OTP code for password reset.",
                "summary": "Verify password reset OTP",
                "tags": [
                    "PasswordReset"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyOtpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/password/create-new": {
            "post": {
                "operationId": "passwordReset.createNewPassword",
                "description": "Create a new password after OTP verification.",
                "summary": "Create new password",
                "tags": [
                    "PasswordReset"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateNewPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/payment-modes": {
            "get": {
                "operationId": "payment.getAllPaymentModes",
                "description": "Retrieve a list of all available payment modes in the system.",
                "summary": "Get all payment modes",
                "tags": [
                    "Payment"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/payment/verify": {
            "put": {
                "operationId": "payment.verifyPayment",
                "description": "Verify and update the status of a mobile payment request.",
                "summary": "Verify mobile payment request",
                "tags": [
                    "Payment"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePaymentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/signup/verify-phone": {
            "post": {
                "operationId": "phoneSignup.sendVerificationOtp",
                "summary": "Send signup phone verification OTP\r\n\r\nSend a one-time password to the user's phone for signup verification",
                "tags": [
                    "PhoneSignup"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupPhoneRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/phone/verify": {
            "post": {
                "operationId": "phoneVerification.sendOtp",
                "description": "Send a one-time password to the user's phone for verification.",
                "summary": "Send phone verification OTP",
                "tags": [
                    "PhoneVerification"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhoneOtpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/phone/verify-otp": {
            "post": {
                "operationId": "phoneVerification.verifyOtp",
                "description": "Verify the OTP code sent to the user's phone.",
                "summary": "Verify phone OTP",
                "tags": [
                    "PhoneVerification"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyPhoneOtpRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/pin/validate": {
            "post": {
                "operationId": "pin.validatePin",
                "tags": [
                    "Pin"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PinValidationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to validate PIN"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "PIN is valid",
                                                "PIN is invalid"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "is_valid": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "is_valid"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/pin/change": {
            "post": {
                "operationId": "pin.changePin",
                "tags": [
                    "Pin"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePinRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Success"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/products": {
            "get": {
                "operationId": "product.getAllProducts",
                "description": "Retrieve a list of all products in the system.",
                "summary": "Get all products",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/products/info": {
            "post": {
                "operationId": "product.getProductInfo",
                "description": "Retrieve detailed information about a specific product by its item name.",
                "summary": "Get product information by item name",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "item": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "item"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/products/available": {
            "get": {
                "operationId": "product.getAvailableProducts",
                "description": "Retrieve a list of all products that are currently available for purchase.",
                "summary": "Get all available products",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/products/purchase": {
            "post": {
                "operationId": "productRequest.purchaseProduct",
                "summary": "Purchase a product\r\n\r\nCreate a purchase request for a product",
                "tags": [
                    "ProductRequest"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    },
                                    "AccountNo": {
                                        "type": "string"
                                    },
                                    "item": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID",
                                    "AccountNo",
                                    "item",
                                    "quantity",
                                    "description"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/account_officer_ratings": {
            "post": {
                "operationId": "rating.store",
                "description": "Submit a rating and comment for an account officer.",
                "summary": "Rate an account officer",
                "tags": [
                    "Rating"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RateAccountOfficerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/signup/verify-email": {
            "post": {
                "operationId": "signupVerification.sendVerificationEmail",
                "description": "Send a one-time password to the user's email for signup verification.",
                "summary": "Send signup email verification OTP",
                "tags": [
                    "SignupVerification"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SignupEmailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/sliders": {
            "get": {
                "operationId": "slider.getSlides",
                "description": "Retrieve all slider images for the application.",
                "summary": "Get all slider images",
                "tags": [
                    "Slider"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/staff/login": {
            "post": {
                "operationId": "staff.login",
                "summary": "Staff login",
                "tags": [
                    "Staff"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffLoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "An error occurred during login"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Login successful"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid credentials"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/name": {
            "get": {
                "operationId": "staff.getStaffName",
                "summary": "Get staff name by ID",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to fetch staff name"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff name fetched successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "fullname": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "fullname"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/transactions": {
            "get": {
                "operationId": "staff.getRecentTransactions",
                "summary": "Get staff recent transactions",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to fetch transactions"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Recent transactions fetched successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "staff_id": {
                                                            "type": "string"
                                                        },
                                                        "transactions": {
                                                            "type": "string"
                                                        },
                                                        "total_count": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "staff_id",
                                                        "transactions",
                                                        "total_count"
                                                    ]
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "response_time": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "enum": [
                                                                0
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "timestamp",
                                                "response_time"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No recent transactions found"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "staff_id": {
                                                            "type": "string"
                                                        },
                                                        "transactions": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 0,
                                                            "maxItems": 0,
                                                            "additionalItems": false
                                                        },
                                                        "total_count": {
                                                            "type": "integer",
                                                            "enum": [
                                                                0
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "staff_id",
                                                        "transactions",
                                                        "total_count"
                                                    ]
                                                },
                                                "timestamp": {
                                                    "type": "string"
                                                },
                                                "response_time": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "integer",
                                                            "enum": [
                                                                0
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data",
                                                "timestamp",
                                                "response_time"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/daily-transactions": {
            "get": {
                "operationId": "staff.getDailyTransactions",
                "summary": "Get staff daily transactions",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "transDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to fetch daily transactions"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "error_reference": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "error_reference"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No transactions found for this date",
                                                "Daily transactions retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staff_details": {
                                                    "type": "object",
                                                    "properties": {
                                                        "staff_id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "staff_id",
                                                        "name"
                                                    ]
                                                },
                                                "transactions": {
                                                    "type": "string"
                                                },
                                                "summary": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staff_details",
                                                "transactions",
                                                "summary"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staffID": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staffID"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/daily-deposits": {
            "get": {
                "operationId": "staff.getDailyDeposit",
                "summary": "Get staff daily deposit total",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "transDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to fetch daily deposit total"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daily deposit total retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staff_details": {
                                                    "type": "object",
                                                    "properties": {
                                                        "staff_id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "staff_id",
                                                        "name"
                                                    ]
                                                },
                                                "deposit_summary": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staff_details",
                                                "deposit_summary"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/daily-withdrawals": {
            "get": {
                "operationId": "staff.getDailyWithdrawals",
                "summary": "Get staff daily withdrawals total",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "transDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daily withdrawals total retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staff_details": {
                                                    "type": "object",
                                                    "properties": {
                                                        "staff_id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "staff_id",
                                                        "name"
                                                    ]
                                                },
                                                "withdrawals_summary": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total_withdrawals": {
                                                            "type": "string"
                                                        },
                                                        "date": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total_withdrawals",
                                                        "date"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "staff_details",
                                                "withdrawals_summary"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staffID": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staffID"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/overage": {
            "get": {
                "operationId": "staff.getOverage",
                "summary": "Get staff overage total",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff overage total retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staff_details": {
                                                    "type": "object",
                                                    "properties": {
                                                        "staff_id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "staff_id",
                                                        "name"
                                                    ]
                                                },
                                                "overage_summary": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total_overage": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total_overage"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "staff_details",
                                                "overage_summary"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staffID": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staffID"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/shortage": {
            "get": {
                "operationId": "staff.getShortage",
                "summary": "Get staff shortage total",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff shortage total retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staff_details": {
                                                    "type": "object",
                                                    "properties": {
                                                        "staff_id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "staff_id",
                                                        "name"
                                                    ]
                                                },
                                                "shortage_summary": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total_shortage": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "total_shortage"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "staff_details",
                                                "shortage_summary"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staffID": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staffID"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/aggregate": {
            "get": {
                "operationId": "staff.getAggregate",
                "summary": "Get staff aggregate balance",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff aggregate data retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staff_details": {
                                                    "type": "object",
                                                    "properties": {
                                                        "staff_id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "staff_id",
                                                        "name"
                                                    ]
                                                },
                                                "aggregate_summary": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staff_details",
                                                "aggregate_summary"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Staff not found"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staffID": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staffID"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/transactions/unverified": {
            "get": {
                "operationId": "staff.getUnverifiedTransactions",
                "summary": "Get staff unverified transactions",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unverified transactions fetched successfully",
                                                "No unverified transactions found"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staff_id": {
                                                    "type": "string"
                                                },
                                                "total_unverified": {
                                                    "type": "string"
                                                },
                                                "unverified_transactions": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staff_id",
                                                "total_unverified",
                                                "unverified_transactions"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/transactions/verified": {
            "get": {
                "operationId": "staff.getVerifiedTransactions",
                "summary": "Get staff verified transactions",
                "tags": [
                    "Staff"
                ],
                "parameters": [
                    {
                        "name": "staffID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Select_Date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Verified transactions fetched successfully",
                                                "No verified transactions found for this date"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "staff_id": {
                                                    "type": "string"
                                                },
                                                "date": {
                                                    "type": "string"
                                                },
                                                "total_verified": {
                                                    "type": "string"
                                                },
                                                "verified_transactions": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "staff_id",
                                                "date",
                                                "total_verified",
                                                "verified_transactions"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/staff/pin/validate": {
            "post": {
                "operationId": "staff.validatePin",
                "summary": "Validate staff PIN",
                "tags": [
                    "Staff"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffPinValidationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to validate PIN"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Success"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "response": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "response"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/feedback/rate": {
            "post": {
                "operationId": "staff.rateAccountOfficer",
                "summary": "Rate an account officer",
                "tags": [
                    "Staff"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "overall_satisfaction": {
                                        "type": "integer"
                                    },
                                    "professionalism": {
                                        "type": "integer"
                                    },
                                    "knowledge": {
                                        "type": "integer"
                                    },
                                    "takes_ownership": {
                                        "type": "integer"
                                    },
                                    "understands_myneeds": {
                                        "type": "integer"
                                    },
                                    "comments": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "rated_by": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "overall_satisfaction",
                                    "professionalism",
                                    "knowledge",
                                    "takes_ownership",
                                    "understands_myneeds",
                                    "rated_by"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Rating submitted successfully"
                                            ]
                                        },
                                        "rate": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "rate"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/feedback/submit": {
            "post": {
                "operationId": "staff.submitFeedback",
                "summary": "Submit staff feedback",
                "tags": [
                    "Staff"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "feedback_type": {
                                        "type": "string"
                                    },
                                    "feature_impactd": {
                                        "type": "string"
                                    },
                                    "feedback_comment": {
                                        "type": "string"
                                    },
                                    "rate": {
                                        "type": "integer"
                                    },
                                    "feedback_by": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "feedback_type",
                                    "feature_impactd",
                                    "feedback_comment",
                                    "rate",
                                    "feedback_by"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Feedback submitted successfully"
                                            ]
                                        },
                                        "feedback": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "feedback"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/feedback/upload-images": {
            "post": {
                "operationId": "staff.uploadFeedbackImages",
                "summary": "Upload feedback images",
                "tags": [
                    "Staff"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "reference_no": {
                                        "type": "string"
                                    },
                                    "first_image": {
                                        "type": "string",
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream"
                                    },
                                    "second_image": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "binary",
                                        "contentMediaType": "application/octet-stream"
                                    }
                                },
                                "required": [
                                    "reference_no",
                                    "first_image"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Images uploaded successfully"
                                            ]
                                        },
                                        "feedback": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "feedback"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Feedback not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/staff/request": {
            "post": {
                "operationId": "staffRequest.store",
                "tags": [
                    "StaffRequest"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffRequestFormRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Success"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "respond": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "respond"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/states": {
            "get": {
                "operationId": "state.index",
                "summary": "Get all states\r\n\r\nRetrieve a list of all states in Nigeria",
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/account/statement": {
            "post": {
                "operationId": "statement.getStatement",
                "description": "Retrieve account statement with transactions for a specific date range.",
                "summary": "Get account statement",
                "tags": [
                    "Statement"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatementRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/statements/pdf": {
            "post": {
                "operationId": "statement.sendPdf",
                "description": "Generate a PDF statement and send it to the specified email address.",
                "summary": "Send statement as PDF via email",
                "tags": [
                    "Statement"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatementPdfRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/subcategories": {
            "post": {
                "operationId": "subCategory.getSubCategories",
                "description": "Retrieve all subcategories for a specific category.",
                "summary": "Get subcategories by category",
                "tags": [
                    "SubCategory"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/tickets": {
            "post": {
                "operationId": "ticket.store",
                "description": "Create a new support ticket for the specified account.",
                "summary": "Open a new ticket",
                "tags": [
                    "Ticket"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenTicketRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/fetch_tickets": {
            "get": {
                "operationId": "ticket.index",
                "description": "Retrieve all tickets for a specific account.",
                "summary": "Fetch user tickets",
                "tags": [
                    "Ticket"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transactions/recent": {
            "get": {
                "operationId": "transaction.getRecentTransactions",
                "tags": [
                    "Transaction"
                ],
                "parameters": [
                    {
                        "name": "userID",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account_no",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to fetch recent transactions"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Success"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "success"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No transactions found",
                                                        "Recent transactions fetched successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "transactions": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "transactions"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transactions/range": {
            "get": {
                "operationId": "transaction.getTransactionsByDateRange",
                "tags": [
                    "Transaction"
                ],
                "parameters": [
                    {
                        "name": "account_no",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to fetch transactions"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Success"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "fetchmember_error": {
                                                    "type": "boolean"
                                                },
                                                "Fetch_User_Recent_Transact": {
                                                    "type": "boolean"
                                                },
                                                "fetchmessage": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "fetchmember_error",
                                                "Fetch_User_Recent_Transact",
                                                "fetchmessage"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transactions/daily": {
            "get": {
                "operationId": "transaction.getDailyTransactions",
                "tags": [
                    "Transaction"
                ],
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daily transactions fetched successfully",
                                                "No transactions found for this date"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "date": {
                                                    "type": "string"
                                                },
                                                "total_transactions": {
                                                    "type": "string"
                                                },
                                                "transactions": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "date",
                                                "total_transactions",
                                                "transactions"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transactions/dates": {
            "post": {
                "operationId": "transaction.getDates",
                "tags": [
                    "Transaction"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FetchTransactionDatesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Transaction dates fetched successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "dates": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "dates"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transactions/dates/limited": {
            "post": {
                "operationId": "transaction.getLimitedDates",
                "tags": [
                    "Transaction"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FetchLimitedDatesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Limited transaction dates fetched successfully."
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "dates": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "dates"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "response_time": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer",
                                                    "enum": [
                                                        0
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data",
                                        "timestamp",
                                        "response_time"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transactions/count": {
            "post": {
                "operationId": "transactionCount.count",
                "description": "Retrieve the number of transactions for a given account and date.",
                "summary": "Get transaction count for a specific date",
                "tags": [
                    "TransactionCount"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionCountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transfer": {
            "post": {
                "operationId": "transfer.transfer",
                "description": "Transfer funds between accounts with validation and notifications.",
                "summary": "Process a transfer between accounts",
                "tags": [
                    "Transfer"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transfers/history": {
            "post": {
                "operationId": "transferHistory.index",
                "description": "Retrieve transfer history for a specific account with optional date filtering.",
                "summary": "Fetch transfer history for an account",
                "tags": [
                    "TransferHistory"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferHistoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/transfers/history/between-dates": {
            "post": {
                "operationId": "transferHistory.betweenDates",
                "description": "Retrieve transfer history for a specific account within a date range.",
                "summary": "Fetch transfer history between dates",
                "tags": [
                    "TransferHistory"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransferHistoryBetweenDatesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/vendors": {
            "get": {
                "operationId": "vendor.getAllVendors",
                "summary": "Get all vendors\r\n\r\nRetrieve a list of all available vendors in the system",
                "tags": [
                    "Vendor"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/vendors/tv": {
            "get": {
                "operationId": "vendorTV.getAllVendors",
                "summary": "Get all TV vendors\r\n\r\nRetrieve a list of all TV vendors in the system",
                "tags": [
                    "VendorTV"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/withdrawal-request": {
            "post": {
                "operationId": "withdrawal.createWithdrawalRequest",
                "description": "Create a new withdrawal request for the specified account.",
                "summary": "Create withdrawal request",
                "tags": [
                    "Withdrawal"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userID": {
                                        "type": "string"
                                    },
                                    "AccountNo": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userID",
                                    "AccountNo",
                                    "amount",
                                    "description"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/v1/withdrawal/mobile": {
            "post": {
                "operationId": "withdrawal.requestWithdrawal",
                "description": "Process a withdrawal request from mobile application.",
                "summary": "Process mobile withdrawal request",
                "tags": [
                    "Withdrawal"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WithdrawalRequestMobileRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountOfficerFeedbackRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "feedback_type": {
                        "type": "string"
                    },
                    "feature_impacted": {
                        "type": "string"
                    },
                    "feedback_comment": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "integer"
                    },
                    "feedback_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "feedback_type",
                    "feature_impacted",
                    "feedback_comment",
                    "rate",
                    "feedback_by"
                ],
                "title": "AccountOfficerFeedbackRequest"
            },
            "BillPaymentRequest": {
                "type": "object",
                "properties": {
                    "userID": {
                        "type": "string"
                    },
                    "account_no": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number",
                        "minimum": 0
                    },
                    "description": {
                        "type": "string"
                    },
                    "ref_no": {
                        "type": "string"
                    }
                },
                "required": [
                    "userID",
                    "account_no",
                    "amount",
                    "description",
                    "ref_no"
                ],
                "title": "BillPaymentRequest"
            },
            "CategoryItemRequest": {
                "type": "object",
                "properties": {
                    "item_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "item_name"
                ],
                "title": "CategoryItemRequest"
            },
            "CategorySearchRequest": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    }
                },
                "required": [
                    "category"
                ],
                "title": "CategorySearchRequest"
            },
            "ChangePinRequest": {
                "type": "object",
                "properties": {
                    "phone_number": {
                        "type": "string"
                    },
                    "account_no": {
                        "type": "string"
                    },
                    "secret_question": {
                        "type": "string"
                    },
                    "secret_answer": {
                        "type": "string"
                    },
                    "oldPin": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 4
                    },
                    "new_pin": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 4
                    },
                    "retype_pin": {
                        "type": "string"
                    }
                },
                "required": [
                    "phone_number",
                    "account_no",
                    "secret_question",
                    "secret_answer",
                    "oldPin",
                    "new_pin",
                    "retype_pin"
                ],
                "title": "ChangePinRequest"
            },
            "CreateNewPasswordRequest": {
                "type": "object",
                "properties": {
                    "contact_type": {
                        "type": "string",
                        "enum": [
                            "phone",
                            "email"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email"
                    },
                    "new_password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "retype_password": {
                        "type": "string"
                    }
                },
                "required": [
                    "contact_type",
                    "new_password",
                    "retype_password"
                ],
                "title": "CreateNewPasswordRequest"
            },
            "CustomerRegistrationRequest": {
                "type": "object",
                "properties": {
                    "lastname": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "othername": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "Male",
                            "Female"
                        ]
                    },
                    "Nationality": {
                        "type": "string"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "occupation": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "residential_address": {
                        "type": "string"
                    },
                    "residential_state": {
                        "type": "string"
                    },
                    "residential_Local_govt": {
                        "type": "string"
                    },
                    "state_of_origin": {
                        "type": "string"
                    },
                    "local_govt_of_origin": {
                        "type": "string"
                    },
                    "town_of_origin": {
                        "type": "string"
                    },
                    "bvn_no": {
                        "type": "string"
                    },
                    "marital_status": {
                        "type": "string"
                    },
                    "account_type": {
                        "type": "string"
                    },
                    "means_of_identification": {
                        "type": "string"
                    },
                    "identification_no": {
                        "type": "string"
                    },
                    "staffID_get": {
                        "type": "string"
                    },
                    "next_of_kin_name": {
                        "type": "string"
                    },
                    "next_of_kin_othernames": {
                        "type": "string"
                    },
                    "next_of_kin_address": {
                        "type": "string"
                    },
                    "relationship": {
                        "type": "string"
                    },
                    "sms_notification": {
                        "type": "string"
                    },
                    "email_notification": {
                        "type": "string"
                    },
                    "office_address": {
                        "type": "string"
                    }
                },
                "required": [
                    "lastname",
                    "othername",
                    "gender",
                    "Nationality",
                    "birthday",
                    "occupation",
                    "phone",
                    "email",
                    "residential_address",
                    "residential_state",
                    "residential_Local_govt",
                    "state_of_origin",
                    "local_govt_of_origin",
                    "town_of_origin",
                    "bvn_no",
                    "marital_status",
                    "account_type",
                    "means_of_identification",
                    "identification_no",
                    "staffID_get",
                    "next_of_kin_name",
                    "next_of_kin_othernames",
                    "next_of_kin_address",
                    "relationship",
                    "sms_notification",
                    "email_notification",
                    "office_address"
                ],
                "title": "CustomerRegistrationRequest"
            },
            "DeviceSetupRequest": {
                "type": "object",
                "properties": {
                    "setup_type": {
                        "type": "string",
                        "enum": [
                            "New",
                            "Transfer",
                            "Lost Device"
                        ]
                    },
                    "device_series_no": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "account_no": {
                        "type": "string"
                    },
                    "secret_question": {
                        "type": "string"
                    },
                    "secret_answer": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "retype_password": {
                        "type": "string"
                    }
                },
                "required": [
                    "setup_type",
                    "device_series_no",
                    "phone_number",
                    "user_id",
                    "account_no",
                    "secret_question",
                    "secret_answer",
                    "password",
                    "retype_password"
                ],
                "title": "DeviceSetupRequest"
            },
            "EmailOtpRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "EmailOtpRequest"
            },
            "FeedbackImagesRequest": {
                "type": "object",
                "properties": {
                    "reference_no": {
                        "type": "string"
                    },
                    "first_image": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream"
                    },
                    "second_image": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream"
                    }
                },
                "required": [
                    "reference_no",
                    "first_image",
                    "second_image"
                ],
                "title": "FeedbackImagesRequest"
            },
            "FetchAccountNumberRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "user_id",
                    "password"
                ],
                "title": "FetchAccountNumberRequest"
            },
            "FetchAccountStatusRequest": {
                "type": "object",
                "properties": {
                    "account_no": {
                        "type": "string"
                    }
                },
                "required": [
                    "account_no"
                ],
                "title": "FetchAccountStatusRequest"
            },
            "FetchAccountTypeRequest": {
                "type": "object",
                "properties": {
                    "account_no": {
                        "type": "string"
                    }
                },
                "required": [
                    "account_no"
                ],
                "title": "FetchAccountTypeRequest"
            },
            "FetchLgaRequest": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string"
                    }
                },
                "required": [
                    "state"
                ],
                "title": "FetchLgaRequest"
            },
            "FetchLimitedDatesRequest": {
                "type": "object",
                "properties": {
                    "account_no": {
                        "type": "string"
                    }
                },
                "required": [
                    "account_no"
                ],
                "title": "FetchLimitedDatesRequest"
            },
            "FetchTransactionDatesRequest": {
                "type": "object",
                "properties": {
                    "account_no": {
                        "type": "string"
                    }
                },
                "required": [
                    "account_no"
                ],
                "title": "FetchTransactionDatesRequest"
            },
            "FingerprintValidationRequest": {
                "type": "object",
                "properties": {
                    "phone_number": {
                        "type": "string"
                    },
                    "account_no": {
                        "type": "string"
                    },
                    "secret_question": {
                        "type": "string"
                    },
                    "secret_answer": {
                        "type": "string"
                    }
                },
                "required": [
                    "phone_number",
                    "account_no",
                    "secret_question",
                    "secret_answer"
                ],
                "title": "FingerprintValidationRequest"
            },
            "ForgetPasswordOtpRequest": {
                "type": "object",
                "properties": {
                    "contact_type": {
                        "type": "string",
                        "enum": [
                            "phone",
                            "email"
                        ]
                    },
                    "phone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email"
                    }
                },
                "required": [
                    "contact_type"
                ],
                "title": "ForgetPasswordOtpRequest"
            },
            "ForgotPasswordRequest": {
                "type": "object",
                "properties": {
                    "phone_number": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "account_no": {
                        "type": "string"
                    },
                    "secret_question": {
                        "type": "string"
                    },
                    "secret_answer": {
                        "type": "string"
                    }
                },
                "required": [
                    "phone_number",
                    "user_id",
                    "account_no",
                    "secret_question",
                    "secret_answer"
                ],
                "title": "ForgotPasswordRequest"
            },
            "GenerateOtpRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    }
                },
                "required": [
                    "user_id",
                    "phone"
                ],
                "title": "GenerateOtpRequest"
            },
            "OpenTicketRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "account_no": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number",
                        "minimum": 0
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "type",
                    "account_no",
                    "description",
                    "amount",
                    "transaction_date"
                ],
                "title": "OpenTicketRequest"
            },
            "PhoneOtpRequest": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string",
                        "minLength": 10
                    }
                },
                "required": [
                    "phone"
                ],
                "title": "PhoneOtpRequest"
            },
            "PinValidationRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "pin_no": {
                        "type": "string"
                    }
                },
                "required": [
                    "user_id",
                    "pin_no"
                ],
                "title": "PinValidationRequest"
            },
            "RateAccountOfficerRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "overall_satisfaction": {
                        "type": "integer"
                    },
                    "professionalism": {
                        "type": "integer"
                    },
                    "knowledge": {
                        "type": "integer"
                    },
                    "takes_ownership": {
                        "type": "integer"
                    },
                    "understands_myneeds": {
                        "type": "integer"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "rated_by": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "overall_satisfaction",
                    "professionalism",
                    "knowledge",
                    "takes_ownership",
                    "understands_myneeds",
                    "comments",
                    "rated_by"
                ],
                "title": "RateAccountOfficerRequest"
            },
            "SignupEmailRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "email"
                ],
                "title": "SignupEmailRequest"
            },
            "SignupPhoneRequest": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string"
                    }
                },
                "required": [
                    "phone"
                ],
                "title": "SignupPhoneRequest"
            },
            "StaffLoginRequest": {
                "type": "object",
                "properties": {
                    "staffID": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "staffID",
                    "password"
                ],
                "title": "StaffLoginRequest"
            },
            "StaffPinValidationRequest": {
                "type": "object",
                "properties": {
                    "staff_id": {
                        "type": "string"
                    },
                    "pin_no": {
                        "type": "string"
                    }
                },
                "required": [
                    "staff_id",
                    "pin_no"
                ],
                "title": "StaffPinValidationRequest"
            },
            "StaffRequestFormRequest": {
                "type": "object",
                "properties": {
                    "request_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "amount": {
                        "type": "number",
                        "minimum": 0
                    },
                    "description": {
                        "type": "string"
                    },
                    "staffID": {
                        "type": "string"
                    }
                },
                "required": [
                    "request_name",
                    "amount",
                    "description",
                    "staffID"
                ],
                "title": "StaffRequestFormRequest"
            },
            "StatementPdfRequest": {
                "type": "object",
                "properties": {
                    "account_no": {
                        "type": "string"
                    },
                    "fromdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "todate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "account_no",
                    "fromdate",
                    "todate",
                    "email"
                ],
                "title": "StatementPdfRequest"
            },
            "StatementRequest": {
                "type": "object",
                "properties": {
                    "userID": {
                        "type": "string"
                    },
                    "account_no": {
                        "type": "string"
                    },
                    "from": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "to": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "userID",
                    "account_no",
                    "from",
                    "to"
                ],
                "title": "StatementRequest"
            },
            "StoreOrderRequest": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string"
                    },
                    "item_code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "account_no": {
                        "type": "string"
                    },
                    "Qty": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "price": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "total": {
                        "type": [
                            "number",
                            "null"
                        ]
                    }
                },
                "required": [
                    "product_name",
                    "account_no",
                    "Qty"
                ],
                "title": "StoreOrderRequest"
            },
            "SubCategoryRequest": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    }
                },
                "required": [
                    "category"
                ],
                "title": "SubCategoryRequest"
            },
            "TransactionCountRequest": {
                "type": "object",
                "properties": {
                    "account_no": {
                        "type": "string"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "account_no",
                    "transaction_date"
                ],
                "title": "TransactionCountRequest"
            },
            "TransferHistoryBetweenDatesRequest": {
                "type": "object",
                "properties": {
                    "account_no": {
                        "type": "string"
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "account_no",
                    "start",
                    "end"
                ],
                "title": "TransferHistoryBetweenDatesRequest"
            },
            "TransferHistoryRequest": {
                "type": "object",
                "properties": {
                    "account_no": {
                        "type": "string"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "account_no",
                    "transaction_date"
                ],
                "title": "TransferHistoryRequest"
            },
            "TransferRequest": {
                "type": "object",
                "properties": {
                    "userID": {
                        "type": "string"
                    },
                    "sender_account_no": {
                        "type": "string"
                    },
                    "amount_transfer": {
                        "type": "number",
                        "minimum": 0
                    },
                    "sender_description": {
                        "type": "string"
                    },
                    "Receiver_account_number": {
                        "type": "string"
                    },
                    "Pin": {
                        "type": "string"
                    }
                },
                "required": [
                    "userID",
                    "sender_account_no",
                    "amount_transfer",
                    "sender_description",
                    "Receiver_account_number",
                    "Pin"
                ],
                "title": "TransferRequest"
            },
            "UpdatePaymentRequest": {
                "type": "object",
                "properties": {
                    "ref_no": {
                        "type": "string"
                    }
                },
                "required": [
                    "ref_no"
                ],
                "title": "UpdatePaymentRequest"
            },
            "UploadPassportRequest": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string"
                    },
                    "passport": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream"
                    }
                },
                "required": [
                    "phone",
                    "passport"
                ],
                "title": "UploadPassportRequest"
            },
            "VerifyEmailOtpRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "otp_code": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 6
                    }
                },
                "required": [
                    "email",
                    "otp_code"
                ],
                "title": "VerifyEmailOtpRequest"
            },
            "VerifyOtpCheckRequest": {
                "type": "object",
                "properties": {
                    "otp_code": {
                        "type": "string"
                    }
                },
                "required": [
                    "otp_code"
                ],
                "title": "VerifyOtpCheckRequest"
            },
            "VerifyOtpRequest": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "otp_code": {
                        "type": "string"
                    }
                },
                "required": [
                    "user_id",
                    "otp_code"
                ],
                "title": "VerifyOtpRequest"
            },
            "VerifyPhoneOtpRequest": {
                "type": "object",
                "properties": {
                    "phone": {
                        "type": "string"
                    },
                    "otp_code": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 6
                    }
                },
                "required": [
                    "phone",
                    "otp_code"
                ],
                "title": "VerifyPhoneOtpRequest"
            },
            "WithdrawalRequestMobileRequest": {
                "type": "object",
                "properties": {
                    "userID": {
                        "type": "string"
                    },
                    "AccountNo": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number",
                        "minimum": 0
                    },
                    "description": {
                        "type": "string"
                    },
                    "Pin": {
                        "type": "string"
                    }
                },
                "required": [
                    "userID",
                    "AccountNo",
                    "amount",
                    "description",
                    "Pin"
                ],
                "title": "WithdrawalRequestMobileRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}